apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'

import com.android.build.OutputFile

react {
}
def enableSeparateBuildPerCPUArchitecture = true

def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'

def enableHermes = false;

def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}



android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    // dexOptions {
    //     javaMaxHeapSize "8g"
    //     jumboMode true
    // }

     defaultConfig {
        applicationId "io.beetkom"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 6
        versionName "2.7"
        vectorDrawables.useSupportLibrary = true
        missingDimensionStrategy 'react-native-camera', 'general', 'store', 'play'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            keyAlias 'my-key-alias'
            keyPassword 'S77421306a@#'
            storeFile file('beetkom.keystore')
            storePassword 'S77421306a@#'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }


    packagingOptions {
        pickFirst '**/armeabi-v7a/libc++_shared.so'
        pickFirst '**/x86/libc++_shared.so'
        pickFirst '**/arm64-v8a/libc++_shared.so'
        pickFirst '**/x86_64/libc++_shared.so'
        pickFirst '**/x86/libjsc.so'
        pickFirst '**/armeabi-v7a/libjsc.so'
    }

    flavorDimensions "appstore"

    productFlavors {
        googlePlay {
            dimension "appstore"
            missingDimensionStrategy "store", "play"
        }

        amazon {
            dimension "appstore"
            missingDimensionStrategy "store", "amazon"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    // implementation(platform("com.google.firebase:firebase-bom:32.8.1"))
    // implementation("com.google.firebase:firebase-auth")
    // implementation 'com.google.android.play:integrity:1.3.0'
    // implementation("com.google.firebase:firebase-appcheck-playintegrity")
    // implementation("com.google.firebase:firebase-appcheck-debug")
    // implementation "com.braintreepayments.api:data-collector:3.+"
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    // implementation 'androidx.browser:browser:1.3.0'
    // implementation 'com.google.android.gms:play-services-recaptcha:16.0.0'

    //expo
    def isGifEnabled = (findProperty('expo.gif.enabled') ?: "") == "true";
    def isWebpEnabled = (findProperty('expo.webp.enabled') ?: "") == "true";
    def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: "") == "true";

    // If your app supports Android versions before Ice Cream Sandwich (API level 14)
    // All fresco packages should use the same version
    if (isGifEnabled || isWebpEnabled) {
        implementation 'com.facebook.fresco:fresco:2.0.0'
        implementation 'com.facebook.fresco:imagepipeline-okhttp3:2.0.0'
    }

    if (isGifEnabled) {
        // For animated gif support
        implementation 'com.facebook.fresco:animated-gif:2.0.0'
    }

    if (isWebpEnabled) {
        // For webp support
        implementation 'com.facebook.fresco:webpsupport:2.0.0'
        if (isWebpAnimatedEnabled) {
            // Animated webp support
            implementation 'com.facebook.fresco:animated-webp:2.0.0'
        }
    }

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // Add androidx.lifecycle dependencies with consistent versions
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
}

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply from: new File(["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json')"].execute().text.trim(), "../native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

configurations.all {
    resolutionStrategy {
        force "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
        force "androidx.lifecycle:lifecycle-viewmodel:2.5.1"
        force "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
        force "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    }
}
